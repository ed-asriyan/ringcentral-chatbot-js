{"version":3,"sources":["../../src/apps/bot.js"],"names":["createApp","handle","options","app","all","req","res","send","bot","Bot","init","code","query","token","body","set","setupWebHook","type","post","header","message","console","log","JSON","stringify","eventType","deleteBot","result","botId","ownerId","joinGroupBot","findByPk","groupId","id","group"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACrC,QAAMC,GAAG,GAAG,uBAAZ;AAEAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACpCA,IAAAA,GAAG,CAACC,IAAJ,CAAS,EAAT;AACA,UAAMC,GAAG,GAAG,MAAMC,YAAIC,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAEN,GAAG,CAACO,KAAJ,CAAUD,IAAlB;AAAwBE,MAAAA,KAAK,EAAER,GAAG,CAACS,IAAnC;AAAyC,SAAGZ;AAA5C,KAAT,CAAlB;AACAM,IAAAA,GAAG,CAACO,GAAJ,CAAQb,OAAR;AACA,UAAMM,GAAG,CAACQ,YAAJ,EAAN,CAJoC,CAIX;;AACzB,UAAMf,MAAM,CAAC;AAAEgB,MAAAA,IAAI,EAAE,UAAR;AAAoBT,MAAAA;AAApB,KAAD,CAAZ;AACD,GAND;AAQAL,EAAAA,GAAG,CAACe,IAAJ,CAAS,UAAT,EAAqB,OAAOb,GAAP,EAAYC,GAAZ,KAAoB;AACvCA,IAAAA,GAAG,CAACa,MAAJ,CAAW,kBAAX,EAA+Bd,GAAG,CAACc,MAAJ,CAAW,kBAAX,CAA/B;AACAb,IAAAA,GAAG,CAACC,IAAJ,CAAS,EAAT;AACA,UAAMa,OAAO,GAAGf,GAAG,CAACS,IAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAhC;AACA,UAAMN,IAAI,GAAGM,OAAO,CAACN,IAArB;;AACA,QAAIA,IAAJ,EAAU;AACR,cAAQA,IAAI,CAACW,SAAb;AACE,aAAK,QAAL;AAAe;AACb,kBAAMC,SAAS,GAAG,MAAM,0BAAWN,OAAX,CAAxB;AACA,kBAAMnB,MAAM,CAAC;AAAEgB,cAAAA,IAAI,EAAE,YAAR;AAAsBT,cAAAA,GAAG,EAAEkB;AAA3B,aAAD,CAAZ;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,kBAAMC,MAAM,GAAG,MAAM,yBAAUP,OAAV,CAArB;;AACA,gBAAIO,MAAJ,EAAY;AACV,oBAAM1B,MAAM,CAAC;AAAEgB,gBAAAA,IAAI,EAAE,aAAR;AAAuB,mBAAGU;AAA1B,eAAD,CAAZ;AACD;;AACD;AACD;;AACD,aAAK,WAAL;AACE,gBAAM,yBAAUP,OAAV,CAAN;AACA;;AACF,aAAK,aAAL;AAAoB;AAClB,kBAAMQ,KAAK,GAAGR,OAAO,CAACS,OAAtB;AACA,kBAAMC,YAAY,GAAG,MAAMrB,YAAIsB,QAAJ,CAAaH,KAAb,CAA3B;AACA,kBAAMI,OAAO,GAAGZ,OAAO,CAACN,IAAR,CAAamB,EAA7B;AACA,kBAAMhC,MAAM,CAAC;AAAEgB,cAAAA,IAAI,EAAE,cAAR;AAAwBT,cAAAA,GAAG,EAAEsB,YAA7B;AAA2CI,cAAAA,KAAK,EAAE;AAAED,gBAAAA,EAAE,EAAED;AAAN;AAAlD,aAAD,CAAZ;AACA;AACD;;AACD;AACE;AAxBJ;;AA0BA,YAAM/B,MAAM,CAAC;AAAEgB,QAAAA,IAAI,EAAEH,IAAI,CAACW,SAAb;AAAwBL,QAAAA;AAAxB,OAAD,CAAZ;AACD;AACF,GAnCD;AAqCA,SAAOjB,GAAP;AACD,CAjDD;;eAmDeH,S","sourcesContent":["import express from 'express'\n\nimport { Bot } from '../models'\nimport { botDeleted, postAdded, groupLeft } from '../handlers'\n\nconst createApp = (handle, options) => {\n  const app = express()\n\n  app.all('/oauth', async (req, res) => {\n    res.send('')\n    const bot = await Bot.init({ code: req.query.code, token: req.body, ...options })\n    bot.set(options)\n    await bot.setupWebHook() // this might take a while, depends on when the bot user is ready\n    await handle({ type: 'BotAdded', bot })\n  })\n\n  app.post('/webhook', async (req, res) => {\n    res.header('Validation-Token', req.header('Validation-Token'))\n    res.send('')\n    const message = req.body\n    console.log('WebHook payload:', JSON.stringify(message))\n    const body = message.body\n    if (body) {\n      switch (body.eventType) {\n        case 'Delete': {\n          const deleteBot = await botDeleted(message)\n          await handle({ type: 'BotRemoved', bot: deleteBot })\n          break\n        }\n        case 'PostAdded': {\n          const result = await postAdded(message)\n          if (result) {\n            await handle({ type: 'Message4Bot', ...result })\n          }\n          break\n        }\n        case 'GroupLeft':\n          await groupLeft(message)\n          break\n        case 'GroupJoined': {\n          const botId = message.ownerId\n          const joinGroupBot = await Bot.findByPk(botId)\n          const groupId = message.body.id\n          await handle({ type: 'BotJoinGroup', bot: joinGroupBot, group: { id: groupId } })\n          break\n        }\n        default:\n          break\n      }\n      await handle({ type: body.eventType, message })\n    }\n  })\n\n  return app\n}\n\nexport default createApp\n"],"file":"bot.js"}